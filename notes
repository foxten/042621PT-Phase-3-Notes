Phase 3

082421 Study Group
    - Questions everyone has about the shift to backend development:
        - How much more difficult is Ruby compared to React?
            - More in line with learning JavaScript than React. Won't necessarily be more/less difficult, but it will be different. There are similarities between 
              Ruby and JavaScript that you'll notice. 

        - Is the rest of the bootcamp going to focus on Ruby?
            - Ruby, then Rails (a framework for Ruby).
    
        - Why did Flatiron choose Ruby?
            - No clue. 

    - What is Ruby?
        - Object oriented language
        - Backend language

    - Let's define the following terms, and identify their JS counterparts
        - puts/print --> console.log()/line break provided for each puts statement
        - pp --> 'pretty printing'/use when logging hashes to the console
        - p --> print + inspect 
        - nil --> null & undefined 

    - What is a method?
        - Ruby's version of functions (to reference JavaScript)
        - Methods implicitly return the last line of code 
            -If there's nothing, our return is 'nil'
    
    - Booleans
        - What values are considered falsy in Ruby? (Hint: There are only two (2)!)
            - False & Nil 

    - Variable Declaration
        - snake_cased 
        - scoped differently than JS variables
            - declared wherever they're supposed to live
                - if declared outside of a method, they cannot be used in the method
                    - can be passed in as a argument, but that's it
        -concrete example of class vs instance variable methods on Thursday (8/26)
    
    - Operators
        - === !== (JS) / == != (Ruby)

082621 Study Group

    - Conditionals
        - if statement  
            - Ruby: if condition
                        execute this  
                    end 
        - if/elsif/else
            - JS: if (condition) { block } else if (anotherCondition) { block } else { block }
            - Ruby: if condition 
                        execute this
                    elsif another_condition
                        execute this instead
                    else 
                        execute this 
                    end 
        
        - unless
            - the opposite of an 'if' statement!

        - case statements  
            - JS switch statements
                - case thing_to_evaluate
                  when some_condition_is_met 
                    execute this
                  when some_other_condition_is_met
                    execute this
                  else
                    execute this
                  end 

        - statement modifiers!
            - if and unless! 

083121 Study Group

    - Loops
        - while 
            - do something until the condition provided is no longer true

        - until 
            - do something until the condition provided is true/until we meet some criteria provided 

        - times
            - do something x number of times
        
        - each
            - akin to forEach in JavaScript
            - will do something to/for each item in an array or a hash

090921 Study Group
    - What is Object Oriented Programming?
        - Everything's an Object
        - Helps make design & implementation easier
        - Uses classes to create these objects 
        - Abstracts a ton of code

    - What are Ruby classes?
        - Blueprints for the objects

    - What are instances?
        - Object occurrences of the ruling class

    - Getter Methods
        - How do we set these up?
            - def method_name 
                @instance_variable
              end   

        - When would we use them?
            - When we want to read some data from our instance of a class, we use Getter methods

    - Setter Methods
        - How do we set these up?
            - def method_name=(argument)
                @instance_variable = argument
              end

        - When would we use them?
            - To write some data to our instance 

    - Macros
        - What are they?
            - attr_accessor
            - attr_writer
            - attr_reader

        - When should we use them?
            - use attr_writer when you need a setter method
            - use attr_reader when you need a getter method
            - use attr_accessor when you need to read and write (get and set)

    - Single Responsibility / Separation of Concerns
        - Make different classes for different functionality
        - Makes code more open ended so we're coding for the future

091321 Study Group
    - Self
         - Refers to the context it's in 
            - ex.: self.length in an instance method refers to the instance of the class
            - ex.: self can also be used in class methods


    - Class Variables && Constants
        - Variables
            - within class scope
                - @@variable_name
            - cannot use the attr macros to get or set these

        - Constants
            - all caps
            - signals to other developers that values should not be changed
                - but they technically can be reassigned

    - Instance Methods 
        - methods that apply to an instance of a class 


    - Class Methods
        - methods that apply to the class


    - Private Methods
        - methods that aren't accessible outside of the class
            - great for building APIs and restricting data access/permissions